plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'io.gatling.gradle' version "3.9.3"
}

group = 'kr.rene.template'
version = '0.0.1'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    implementation.exclude module: 'spring-boot-starter-tomcat'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-undertow'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'


    runtimeOnly 'com.mysql:mysql-connector-j'

    implementation 'org.springframework.data:spring-data-envers'


    // model mapper
    implementation 'org.modelmapper:modelmapper:3.2.0'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'


    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'


    // logback
    implementation 'ch.qos.logback:logback-classic'
    implementation 'ch.qos.logback:logback-core'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}


gatling {
    jvmArgs = ['-server', '-Xms512M', '-Xmx512M']
    systemProperties = ['file.encoding': 'UTF-8']
    simulations = {
        include "**/kr/rene/template/sampledomain1/UserGenerationByDifferentMappers.java"
    }
}